# ============================================================================
# MEDIA VM (10.10.10.113) - Complete Media Stack
# ============================================================================
# Plex + Overseerr + Arr Stack + SABnzbd + qBittorrent (via VPN) + Bazarr + Notifiarr
#
# VOLUME MAPPING STRATEGY:
# - ALL services mount /mnt/nas/media → /media (single source of truth)
# - System configs stay in /opt/homelab/media/<service>/config
# - NAS structure:
#   /mnt/nas/media/
#     ├── library/movies/     (final media - read by Plex)
#     ├── library/tv/         (final media - read by Plex)
#     └── downloads/          (temp download location)
#         ├── sabnzbd/        (Usenet downloads)
#         └── torrents/       (Torrent downloads)
#
# DEPLOYMENT ORDER:
# 1. Plex (media server)
# 2. SABnzbd (Usenet downloader - PRIMARY)
# 3. Prowlarr (indexer manager)
# 4. Sonarr + Radarr (TV/movie automation)
# 5. Gluetun + qBittorrent (VPN + torrent fallback)
# 6. Bazarr (subtitles)
# 7. Overseerr (request UI)
# 8. Notifiarr (TRaSH sync)
# ============================================================================

services:
  # ============================================================================
  # MONITORING INFRASTRUCTURE (Always Running)
  # ============================================================================

  portainer-agent:
    image: portainer/agent:latest
    container_name: portainer-agent
    restart: always
    ports:
      - "9001:9001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
      - /:/host
    networks:
      - media_net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  alloy:
    image: grafana/alloy:latest
    container_name: alloy
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./alloy/config:/etc/alloy
    command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
    ports:
      - "10.10.10.113:12345:12345"
    networks:
      - media_net
    healthcheck:
      test: ["CMD-SHELL", "alloy tools pprof health http://localhost:12345 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  beszel-agent:
    image: henrygd/beszel-agent:latest
    container_name: beszel-agent
    restart: unless-stopped
    network_mode: host
    volumes:
      - ./beszel/agent_data:/var/lib/beszel-agent
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      LISTEN: 45876
      HUB_URL: http://10.10.10.112:8090
      KEY: ${BESZEL_KEY}
      TOKEN: ${BESZEL_TOKEN}
    healthcheck:
      test: ['CMD', '/agent', 'health']
      start_period: 5s
      interval: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================================================
  # PLEX - Media Server (with Plex Pass hardware transcoding)
  # ============================================================================
  # Access: http://10.10.10.113:32400/web
  # Libraries: /media/library/movies, /media/library/tv

  plex:
    image: plexinc/pms-docker:latest
    container_name: plex
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - ADVERTISE_IP=http://10.10.10.113:32400/
    ports:
      - "10.10.10.113:32400:32400/tcp"    # Web UI
      - "10.10.10.113:3005:3005/tcp"      # Plex Companion
      - "10.10.10.113:8324:8324/tcp"      # Roku via Plex Companion
      - "10.10.10.113:32469:32469/tcp"    # Plex DLNA Server
      - "10.10.10.113:1900:1900/udp"      # Plex DLNA Server
      - "10.10.10.113:32410:32410/udp"    # GDM network discovery
      - "10.10.10.113:32412:32412/udp"    # GDM network discovery
      - "10.10.10.113:32413:32413/udp"    # GDM network discovery
      - "10.10.10.113:32414:32414/udp"    # GDM network discovery
    volumes:
      - ./plex/config:/config
      - ./plex/transcode:/transcode
      - /mnt/nas/media:/media:ro
    # Uncomment when GPU is added:
    # devices:
    #   - /dev/dri:/dev/dri
    networks:
      - media_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:32400/identity"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================================================
  # SABNZBD - Usenet Downloader (PRIMARY - Newshosting)
  # ============================================================================
  # Access: http://10.10.10.113:8085
  # Configure in UI: Temp folder = /media/downloads/sabnzbd/incomplete
  #                  Completed folder = /media/downloads/sabnzbd/complete

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    ports:
      - "10.10.10.113:8085:8080"
    volumes:
      - ./sabnzbd/config:/config
      - /mnt/nas/media:/media
    networks:
      - media_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api?mode=version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================================================
  # GLUETUN - VPN Client (Privado VPN for qBittorrent)
  # ============================================================================
  # qBittorrent routes ALL traffic through this VPN container
  # Built-in killswitch - if VPN drops, qBittorrent stops working

  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    environment:
      - VPN_SERVICE_PROVIDER=privado
      - OPENVPN_USER=${PRIVADO_VPN_USERNAME}
      - OPENVPN_PASSWORD=${PRIVADO_VPN_PASSWORD}
      - SERVER_COUNTRIES=${PRIVADO_VPN_COUNTRY}
      - TZ=UTC
    ports:
      - "10.10.10.113:8080:8080"      # qBittorrent WebUI
      - "10.10.10.113:6881:6881"      # qBittorrent TCP
      - "10.10.10.113:6881:6881/udp"  # qBittorrent UDP
    networks:
      - media_net
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9999"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================================================
  # QBITTORRENT - Torrent Downloader (FALLBACK - via Privado VPN)
  # ============================================================================
  # Access: http://10.10.10.113:8080
  # Default user: admin, password: check logs on first run
  # IMPORTANT: Uses Gluetun's network (all traffic via VPN)
  # Configure in UI: Default Save Path = /media/downloads/torrents/complete

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    network_mode: "service:gluetun"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - WEBUI_PORT=8080
    volumes:
      - ./qbittorrent/config:/config
      - /mnt/nas/media:/media
    depends_on:
      - gluetun
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================================================
  # PROWLARR - Indexer Manager (Usenet + Torrent)
  # ============================================================================
  # Access: http://10.10.10.113:9696
  # Add indexers: NZBFinder, DrunkenSlug, NinjaCentral
  # Auto-syncs to Sonarr + Radarr

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    ports:
      - "10.10.10.113:9696:9696"
    volumes:
      - ./prowlarr/config:/config
    networks:
      - media_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9696/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================================================
  # SONARR - TV Show Automation
  # ============================================================================
  # Access: http://10.10.10.113:8989
  # Root folder: /media/library/tv
  # Download paths: /media/downloads/sabnzbd/complete, /media/downloads/torrents/complete

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    ports:
      - "10.10.10.113:8989:8989"
    volumes:
      - ./sonarr/config:/config
      - /mnt/nas/media:/media
    networks:
      - media_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8989/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================================================
  # RADARR - Movie Automation
  # ============================================================================
  # Access: http://10.10.10.113:7878
  # Root folder: /media/library/movies
  # Download paths: /media/downloads/sabnzbd/complete, /media/downloads/torrents/complete

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    ports:
      - "10.10.10.113:7878:7878"
    volumes:
      - ./radarr/config:/config
      - /mnt/nas/media:/media
    networks:
      - media_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7878/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================================================
  # BAZARR - Subtitle Automation
  # ============================================================================
  # Access: http://10.10.10.113:6767
  # Movies: /media/library/movies, TV: /media/library/tv

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    ports:
      - "10.10.10.113:6767:6767"
    volumes:
      - ./bazarr/config:/config
      - /mnt/nas/media:/media
    networks:
      - media_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6767/api/system/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================================================
  # OVERSEERR - Request & Discovery UI
  # ============================================================================
  # Access: http://10.10.10.113:5055
  # Beautiful UI for requesting movies/TV shows
  # Integrates with Plex + Sonarr + Radarr

  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    ports:
      - "10.10.10.113:5055:5055"
    volumes:
      - ./overseerr/config:/app/config
    networks:
      - media_net
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:5055/api/v1/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================================================
  # NOTIFIARR - TRaSH Guides Sync + Notifications
  # ============================================================================
  # Access: http://10.10.10.113:5454
  # Auto-syncs TRaSH custom formats to Sonarr/Radarr
  # Requires Patron API key from notifiarr.com

  notifiarr:
    image: golift/notifiarr:latest
    container_name: notifiarr
    restart: unless-stopped
    hostname: media
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    ports:
      - "10.10.10.113:5454:5454"
    volumes:
      - ./notifiarr/config:/config
    networks:
      - media_net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  media_net:
    driver: bridge
    name: media_net
