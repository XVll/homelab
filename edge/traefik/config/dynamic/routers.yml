# Traefik Routers - Traffic Routing Rules

http:
  # Routers match incoming requests and decide where to send them
  routers:
    # Authentik (SSO) - no auth middleware on itself
    authentik:
      rule: "Host(`auth.onurx.com`)"
      entryPoints:
        - websecure
      service: authentik-svc
      middlewares:
        - security-headers
      tls:
        certResolver: cloudflare

    # Portainer
    portainer:
      rule: "Host(`portainer.onurx.com`)"
      entryPoints:
        - websecure
      service: portainer
      middlewares:
        - security-headers
      tls:
        certResolver: cloudflare

    # Grafana (Authentik disabled until we configure it)
    grafana:
      rule: "Host(`grafana.onurx.com`)"
      entryPoints:
        - websecure
      service: grafana
      middlewares:
        - security-headers
      tls:
        certResolver: cloudflare

    # Prometheus (Authentik disabled until we configure it)
    prometheus:
      rule: "Host(`prometheus.onurx.com`)"
      entryPoints:
        - websecure
      service: prometheus
      middlewares:
        - security-headers
      tls:
        certResolver: cloudflare

    # Loki (API access - optional, mainly used internally)
    loki:
      rule: "Host(`loki.onurx.com`)"
      entryPoints:
        - websecure
      service: loki
      middlewares:
        - security-headers
      tls:
        certResolver: cloudflare

    # Alloy (Web UI - optional, for debugging)
    alloy:
      rule: "Host(`alloy.onurx.com`)"
      entryPoints:
        - websecure
      service: alloy
      middlewares:
        - security-headers
      tls:
        certResolver: cloudflare

    # Gitea (Git + Container Registry + CI/CD)
    gitea:
      rule: "Host(`git.onurx.com`)"
      entryPoints:
        - websecure
      service: gitea
      middlewares:
        - forwarded-headers
        - security-headers
      tls:
        certResolver: cloudflare

    # Dokploy (Deployment Platform)
    dokploy:
      rule: "Host(`deploy.onurx.com`)"
      entryPoints:
        - websecure
      service: dokploy
      middlewares:
        - forwarded-headers
        - security-headers
      tls:
        certResolver: cloudflare

    # MinIO Console
    minio-console:
      rule: "Host(`minio.onurx.com`)"
      entryPoints:
        - websecure
      service: minio-console
      middlewares:
        - security-headers
      tls:
        certResolver: cloudflare

    # MinIO API (S3)
    minio-api:
      rule: "Host(`s3.onurx.com`)"
      entryPoints:
        - websecure
      service: minio-api
      middlewares:
        - security-headers
      tls:
        certResolver: cloudflare

    # Home Assistant (OLD - pointing to 10.10.10.13)
    homeassistant:
      rule: "Host(`ha.onurx.com`)"
      entryPoints:
        - websecure
      service: homeassistant
      middlewares:
        - security-headers
      tls:
        certResolver: cloudflare

    # DMO (OLD Coolify app)
    dmo:
      rule: "Host(`dmo.onurx.com`)"
      entryPoints:
        - websecure
      service: dmo
      middlewares:
        - security-headers
      tls:
        certResolver: cloudflare

    # King Game (OLD - HTTP + WebSocket)
    king:
      rule: "Host(`king.onurx.com`)"
      entryPoints:
        - websecure
      service: king
      tls:
        certResolver: cloudflare

    # King Game WebSocket (OLD)
    wsking:
      rule: "Host(`wsking.onurx.com`)"
      entryPoints:
        - websecure
      service: king
      middlewares:
        - websocket-headers
      tls:
        certResolver: cloudflare
